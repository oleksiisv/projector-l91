# For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./vendor/laravel/sail/runtimes/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
        image: sail-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
            - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mysql
            - redis

    ### MySQL ################################################
    mysql:
        image: 'mysql/mysql-server:8.0'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes:
            - 'sail-mysql:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: ["CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}"]
            retries: 3
            timeout: 5s

    ### Redis ################################################
    redis:
        image: 'bitnami/redis:latest'
        hostname: 'redis'
        environment:
            - REDIS_REPLICATION_MODE=master
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        networks:
            - sail
        ports:
            - '${REDIS_PORT}:6379'
        volumes:
            - 'sail-redis:/data'
            - './redis/conf:/opt/bitnami/redis/etc/'
        healthcheck:
            test: [ "CMD", "redis-cli", "ping" ]
            retries: 3
            timeout: 5s

    ### Redis slave ################################################
    redis-slave:
        image: 'bitnami/redis:latest'
        environment:
            - REDIS_REPLICATION_MODE=slave
            - REDIS_MASTER_HOST=${REDIS_HOST}
            - REDIS_MASTER_PASSWORD=${REDIS_PASSWORD}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        ports:
            - '6379'
        depends_on:
            - redis
        networks:
            - sail
        volumes:
            - 'sail-redis:/data'

    ### Redis Sentinel ################################################
    redis-sentinel:
        image: 'bitnami/redis-sentinel:latest'
        depends_on:
            - redis
            - redis-slave
        ports:
            - '26379-26381:26379'
        networks:
            - sail
        volumes:
            - 'sail-redis:/data'
            - './redis:/bitnami'
        links:
            - redis

    ### Grafana ################################################
    grafana:
        build:
            context: ./grafana
        env_file: ./.env
        volumes:
            - ./grafana:/var/lib/grafana
            - ./grafana/provisioning/:/etc/grafana/provisioning/
            - ./grafana/dashboards/:/var/lib/grafana/dashboards/
        ports:
            - "3000:3000"
        depends_on:
            - influxdb
        networks:
            - sail

    ### Telegraf ################################################
    telegraf:
        image: telegraf:1.21
        volumes:
            - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - influxdb
        ports:
            - '127.0.0.1:8125:8125/udp'
        networks:
            - sail

    ### InfluxDb ################################################
    influxdb:
        image: influxdb:1.8
        env_file: ./.env
        ports:
            - "8086:8086"
        volumes:
            - ./:/imports
            - influxdb_data:/var/lib/influxdb
        networks:
            - sail

networks:
    sail:
        driver: bridge
volumes:
    sail-mysql:
        driver: local
    sail-redis:
        driver: local
    grafana_data: { }
    influxdb_data: { }
